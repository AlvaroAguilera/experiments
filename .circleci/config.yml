version: 2
jobs:
  build:
    docker:
      - image: circleci/ruby:2.5.1
    working_directory: ~/circleci-docs
    environment:
      JEKYLL_ENV: production
      NOKOGIRI_USE_SYSTEM_LIBRARIES: true
      JOB_RESULTS_PATH: run-results
    steps:
      - checkout
      - restore_cache:
          key: circleci-docs-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
      - run:
          name: Install Ruby dependencies
          command: |
            cd docs
            bundle check --path=vendor/bundle || bundle install --path=vendor/bundle --jobs=4 --retry=3
      - save_cache:
          key: circleci-docs-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
          paths:
            - "vendor/bundle"
      - run:
          name: Create results directory
          command: mkdir -p $JOB_RESULTS_PATH
      - run:
          name: Build the Jekyll site
          command: bundle exec jekyll build
      - run:
          name: "Test Expfactory Library"
          command: |
            wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh
            /bin/bash Miniconda3-latest-Linux-x86_64.sh -b 
            cd /tmp && git clone https://github.com/expfactory/expfactory.git
            cd /tmp/expfactory && $HOME/miniconda3/bin/python setup.py install
            $HOME/miniconda3/bin/python -m pip install pyaml
            #cd $HOME/experiments/docs && bundle install
            #cd $HOME/experiments/docs && bundle exec jekyll build
            #cd $HOME/experiments/docs && $HOME/miniconda3/bin/python ../tests/circle_urls.py $HOME/experiments/docs/_site
            echo "The Experiment Factory!"
            cd $HOME/circleci-docs && $HOME/miniconda3/bin/python -m unittest tests.test_library
            echo "Previewing Library Metadata"
            cat docs/_site/library.json
      - store_artifacts: 
          path: docs/_site
          destination: circleci-docs
      - persist_to_workspace:
          root: ~/circleci-docs/docs/_site 
          paths: 
            - docs
  deploy:
    docker:
      - image: cibuilds/aws:1.15.44
    steps:
      - attach_workspace:
          at: ./generated-site 
      - run:
          name: Deploy to S3 if tests pass and branch is Master
          command: aws s3 sync generated-site/docs s3://circle-production-static-site/docs/ --delete

workflows:
  version: 2
  build-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master
